<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" uuid="5d4216ef-ce5e-408f-8843-f727c4d6d563" xsi:noNamespaceSchemaLocation="http://www.jetbrains.com/teamcity/schemas/9.0/project-config.xsd">
  <name>Catalyst Deployment</name>
  <description>Gentoo Catalyst Stage Burner</description>
  <settings>
    <disabled-settings>
      <setting-ref ref="RUNNER_42" />
      <setting-ref ref="RUNNER_43" />
    </disabled-settings>
    <parameters>
      <param name="param.profile" value="hardened/linux/amd64" spec="text description='Gentoo Profile' label='Profile' validationMode='not_empty' display='normal'" />
      <param name="param.release.name" value="ccon" spec="text description='Name of release' label='Name' validationMode='not_empty' display='prompt'" />
      <param name="param.release.type" value="hardened" spec="text description='Release Type' label='Type' validationMode='not_empty' display='normal'" />
      <param name="param.snapshot" value="latest" />
      <param name="param.source.path" value="hardened/amd64/stage3-amd64-live" />
      <param name="param.subarch" value="amd64" spec="text description='Architecture' label='Arch' validationMode='not_empty' display='normal'" />
      <param name="param.target" value="livecd" spec="text description='Target Medium' label='Target' validationMode='not_empty' display='normal'" />
      <param name="param.version" value="20151217" spec="text description='Version Stamp' label='Version' validationMode='not_empty' display='prompt'" />
    </parameters>
    <build-runners>
      <runner id="RUNNER_41" name="Set Vars" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[for var in WORK_DIR="/var/data/catalyst/builds/%param.release.name%"\
    TEMPLATE_DIR="/etc/catalyst/templates/%param.release.name%"\
    SNAPSHOT_DIR="/var/data/catalyst/snapshots"\
    BUILD_VER="%param.version%"\
    SNAPSHOT="%param.snapshot%"\
    SUB_ARCH="%param.subarch%"\
    REL_TYPE="%param.release.type%"\
    REL_PROFILE="%param.profile%"\
    REL_SNAPSHOT="%param.snapshot%"\
    SRC_PATH="%param.source.path%"\
    TARGET="%param.target%"
do
    echo ${var}
done > build-vars-common.sh]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_39" name="Stage 1 Deployment" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[set -u

source $(pwd)/build-vars-common.sh || exit 1

SPEC_FILE="stage1.spec"
TEMPLATES="stage1.spec.header.template stage1.spec.use.template stage1.spec.pkg.template"

[[ -d ${WORK_DIR} ]] || mkdir -p ${WORK_DIR}

echo "Checking for templates"
for template in ${TEMPLATES[@]}
do 
    if [[ ! -f ${TEMPLATE_DIR}/${template} ]]
    then
        echo "Missing template: ${template}" 
        exit 1
    fi
done

touch ${WORK_DIR}/${SPEC_FILE} || exit 1

echo "Mangling templates"
sed -e "s/###SUB_ARCH###/${SUB_ARCH}/" \
    -e "s/###VERSION###/${BUILD_VER}/" \
    -e "s/###REL_TYPE###/${REL_TYPE}/" \
    -e "s/###REL_PROFILE###/${REL_TYPE}\/linux\/${SUB_ARCH}/" \
    -e "s/###REL_SNAPSHOT###/${SNAPSHOT}/" \
    -e "s/###SRC_PATH###/${REL_TYPE}\/stage3-${SUB_ARCH}-${REL_TYPE}-${BUILD_VER}/" \
    ${TEMPLATE_DIR}/stage1.spec.header.template > ${WORK_DIR}/${SPEC_FILE} || exit 1

echo >> ${WORK_DIR}/${SPEC_FILE} || exit 1
cat ${TEMPLATE_DIR}/stage1.spec.use.template >> ${WORK_DIR}/${SPEC_FILE}
echo >> ${WORK_DIR}/${SPEC_FILE} || exit 1
cat ${TEMPLATE_DIR}/stage1.spec.pkg.template >> ${WORK_DIR}/${SPEC_FILE}

if [[ ! -f ${WORK_DIR}/stage3-amd64-hardened-${BUILD_VER}.tar.bz2.DIGESTS ]] 
then
    echo "Fetching build hashes"
    wget --directory-prefix=${WORK_DIR} http://distfiles.gentoo.org/releases/amd64/autobuilds/current-stage3-amd64-hardened/stage3-amd64-hardened-${BUILD_VER}.tar.bz2.DIGESTS &> /dev/null || exit 1
fi

echo "Fetching portage hashes"
[[ -f ${SNAPSHOT_DIR}/portage-latest.tar.bz2.md5sum ]] || ( wget --directory-prefix=${SNAPSHOT_DIR} http://distfiles.gentoo.org/snapshots/portage-latest.tar.bz2.md5sum &> /dev/null )
[[ -f ${SNAPSHOT_DIR}/portage-latest.tar.bz2.gpgsig ]] || ( wget --directory-prefix=${SNAPSHOT_DIR} http://distfiles.gentoo.org/snapshots/portage-latest.tar.bz2.gpgsig &> /dev/null )

echo "Checking build hashes"
if [[ -f ${WORK_DIR}/stage3-amd64-hardened-${BUILD_VER}.tar.bz2 ]]
then
    cd ${WORK_DIR}
    ( sha512sum -c stage3-amd64-hardened-${BUILD_VER}.tar.bz2.DIGESTS | egrep -e ": OK$" -e "stage3-amd64-hardened-${BUILD_VER}.tar.bz2" ) &>/dev/null || exit 1
    echo "Not fetching, file exists and checksums match"
    FETCH_STAGE=0
else
    FETCH_STAGE=1
fi

echo "Checking portage hashes"
if [[ -f ${SNAPSHOT_DIR}/portage-latest.tar.bz2 ]]
then
    cd ${SNAPSHOT_DIR}
    md5sum -c portage-latest.tar.bz2.md5sum || exit 1
     echo "Not fetching, file exists and checksums match"
    cd -
else
    FETCH_PORTAGE=1
fi

(( FETCH_PORTAGE == 1 )) && echo "Fetching portage" && ( lftp -c pget http://distfiles.gentoo.org/snapshots/portage-latest.tar.bz2 -o ${SNAPSHOT_DIR}/portage-latest.tar.bz2 &> /dev/null )
(( FETCH_STAGE == 1 )) && echo "Fetching stage" && ( lftp -c pget http://distfiles.gentoo.org/releases/amd64/autobuilds/current-stage3-amd64-hardened/stage3-amd64-hardened-${BUILD_VER}.tar.bz2 -o ${WORK_DIR}/stage3-amd64-hardened-${BUILD_VER}.tar.bz2 &> /dev/null )

exit 0

echo "Taking portage snapshot"
sudo /usr/bin/catalyst -s ${SNAPSHOT}

echo "Running catalyst stage1"
cd ${WORK_DIR}
sudo /usr/bin/catalyst -f ${SPEC_FILE} || exit 1
echo "Fin."

#EMERGE_LOG=$(find /var/data/catalyst/tmp/${REL_TYPE} -name emerge.log &> /dev/null)

#while (( $? == 0 )) 
#do
#  [[ -n ${PRINT_STRING} ]] && echo "${PRINT_STRING}"
#  EMERGE_STAT=$(genlop -c -q -i -t -f ${EMERGE_LOG}|egrep -v -e '!!!' -e 'see manpage'|sed 's/$/ /'|tr -d '\n')
#  [[ -n ${EMERGE_STAT} ]] && PRINT_STRING=${EMERGE_STAT}
#  sleep 1 && jobs | grep Running &> /dev/null
#done
#
#cat catalyst.out]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_43" name="Stage 2 Deployment" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[WORK_DIR="/var/data/catalyst/builds/%param.release.name%"
TEMPLATE_DIR="/etc/catalyst/templates/%param.release.name%"
SPEC_FILE="stage2.spec"
BUILD_VER="%param.version%"
SNAPSHOT="%param.snapshot%"
SUB_ARCH="%param.subarch%"
REL_TYPE="%param.release.type%"
REL_PROFILE="%param.profile%"
REL_SNAPSHOT="%param.snapshot%"
SRC_PATH="%param.source.path%"
TARGET="%param.target%"

TEMPLATES="stage2.spec.boot.template stage2.spec.livecd-post.template"

[[ -d ${WORK_DIR} ]] || mkdir -p ${WORK_DIR}

touch ${WORK_DIR}/${SPEC_FILE} || exit 1


[[ -f ${TEMPLATE_DIR}/stage2.spec.header.template ]] || exit 1
for template in ${TEMPLATES[@]}
do
    [[ -f ${TEMPLATE_DIR}/${template} ]] || exit 1
done

echo "Mangling templates"
sed -e "s/###SUB_ARCH###/${SUB_ARCH}/" \
    -e "s/###VERSION###/${BUILD_VER}/" \
    -e "s/###REL_TYPE###/${REL_TYPE}/" \
    -e "s/###REL_PROFILE###/${REL_TYPE}\/linux\/${SUB_ARCH}/" \
    -e "s/###REL_SNAPSHOT###/${SNAPSHOT}/" \
    -e "s/###SRC_PATH###/${REL_TYPE}\/livecd-stage1-${SUB_ARCH}-${BUILD_VER}/" \
    ${TEMPLATE_DIR}/stage2.spec.header.template > ${WORK_DIR}/${SPEC_FILE}

echo >>  ${WORK_DIR}/${SPEC_FILE}

sed -e "s/###SUB_ARCH###/${SUB_ARCH}/" \
    -e "s/###REL_TYPE###/${REL_TYPE}/" \
    -e "s/###VERSION###/${BUILD_VER}/" \
    ${TEMPLATE_DIR}/stage2.spec.livecd.template >> ${WORK_DIR}/${SPEC_FILE} 

echo "Processing template headers"
for template in ${TEMPLATES[@]}
do
    echo >>  ${WORK_DIR}/${SPEC_FILE}
    cat ${TEMPLATE_DIR}/$template >> ${WORK_DIR}/${SPEC_FILE} || exit 1
done

echo "Running catalyst scripts"
cd ${WORK_DIR}
sudo /usr/bin/catalyst -f ${SPEC_FILE}]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_42" name="" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[[[ -d /var/tmp/catalyst/builds/%Release% ]] || mkdir -p /var/tmp/catalyst/builds/%Release% 
cd /var/tmp/catalyst/builds/%Release%
wget http://distfiles.gentoo.org/releases/amd64/autobuilds/current-stage3-amd64-hardened/stage3-amd64-hardened-20151210.tar.bz2
wget -O portage-latest.tar.bz2 http://distfiles.gentoo.org/snapshots/portage-latest.tar.bz2
wget https://gitweb.gentoo.org/proj/releng.git/tree/releases/weekly/specs/amd64/livecd-stage1.spec
#sudo catalyst -s "$(date +%Y).$(date +%m).$(date +%d)"]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings>
      <vcs-entry-ref root-id="Gentoo_Catalyst_GentooReleaseEng">
        <checkout-rule rule="+:.=&gt;/var/data/catalyst/release/" />
      </vcs-entry-ref>
      <vcs-entry-ref root-id="Gentoo_Catalyst_GentooCatalyst">
        <checkout-rule rule="+:.=&gt;catalyst/" />
      </vcs-entry-ref>
    </vcs-settings>
    <requirements />
    <build-triggers />
    <cleanup />
  </settings>
</build-type>

