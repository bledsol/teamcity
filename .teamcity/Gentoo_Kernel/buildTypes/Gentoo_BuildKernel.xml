<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" uuid="3bce0e57-9001-4387-a472-0f3ca57de08c" xsi:noNamespaceSchemaLocation="http://www.jetbrains.com/teamcity/schemas/9.0/project-config.xsd">
  <name>Build Kernel</name>
  <description>Build, install kernel, initramfs and update grub</description>
  <settings>
    <options>
      <option name="allowExternalStatus" value="true" />
    </options>
    <parameters>
      <param name="env.Gentoo.Kernel.Src.Clean" value="0" spec="checkbox checkedValue='1' description='Clean Source Tree' uncheckedValue='0' label='Clean Build' display='normal'" />
      <param name="env.Gentoo.Kernel.Updated" value="0" spec="checkbox checkedValue='1' description='Check this if new kernel is being installed' uncheckedValue='0' label='New kernel' display='normal'" />
    </parameters>
    <build-runners>
      <runner id="RUNNER_7" name="Make kernel" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[CLEAN_BUILD=%env.Gentoo.Kernel.Src.Clean%
THREAD_COUNT=$(( $( grep processor /proc/cpuinfo |wc -l ) +1 ))
KERNEL_CONFIG='kernel-config-x86_64-4.0.5-builder'

cp sysconfig/kernels/${KERNEL_CONFIG} /usr/src/linux

cd /usr/src/linux

if [[ -f .config ]]
then
  cp .config kernel-config-running
  cp ${KERNEL_CONFIG} .config
fi

if (( ${CLEAN_BUILD} == 1 )) 
then
  echo "Clean build, backup config"
  cp /usr/src/linux/.config /tmp/kernel_config_bk
  echo "Clean source tree"
  sudo make distclean
  echo "Install kernel config"
  sudo mv /tmp/kernel_config_bk /usr/src/linux/.config
fi

echo "Build kernel image"
sudo make -j${THREAD_COUNT}]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_8" name="Install modules" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[CLEAN_BUILD=%env.Gentoo.Kernel.Src.Clean%

cd /usr/src/linux

if (( ${CLEAN_BUILD} == 1 )) 
then
  echo "Clean build, prepare modules"
  sudo make modules_prepare
fi

echo "Make modules"
sudo make modules_install]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_9" name="Install kernel initramfs" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[cd /usr/src/linux
#sudo /usr/bin/genkernel --lvm --mdadm --install initramfs
sudo /usr/bin/genkernel --install --no-ramdisk-modules initramfs]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_10" name="Grub Config" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[sudo /usr/sbin/grub2-mkconfig -o /boot/grub/grub.cfg
sudo /bin/umount /boot]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_13" name="Rebuild userland modules" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[NEW_KERNEL=%env.Gentoo.Kernel.Updated%

if (( ${NEW_KERNEL} == 1 )) 
then
  sudo emerge @module-rebuild
fi]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings>
      <vcs-entry-ref root-id="Gentoo_Sysconfig">
        <checkout-rule rule="+:.=&gt;sysconfig" />
      </vcs-entry-ref>
    </vcs-settings>
    <requirements />
    <build-triggers>
      <build-trigger id="vcsTrigger" type="vcsTrigger">
        <parameters>
          <param name="quietPeriodMode" value="DO_NOT_USE" />
          <param name="triggerRules" value="+:root=Gentoo_Sysconfig: kernels/kernel-config-x86_64-**" />
        </parameters>
      </build-trigger>
    </build-triggers>
    <build-extensions>
      <extension id="perfmon" type="perfmon">
        <parameters />
      </extension>
    </build-extensions>
    <cleanup />
  </settings>
</build-type>

